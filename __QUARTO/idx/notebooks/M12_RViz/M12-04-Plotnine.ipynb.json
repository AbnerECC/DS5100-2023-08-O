{"title":"NB: GGPlot in Python with Plotnine","markdown":{"headingText":"NB: GGPlot in Python with Plotnine","containsRefs":false,"markdown":"\n\n## GGPlot in Python\n\nThere are two ports of GGPlot2 to Python: `pygg` and `plotnine`.\n\nThe first seems to have stopped development and is much less used.\n\nLet's look at Plotnine.\n\nOur old friend, `mpg` in Python:\n\n## A Simple Bar Chart\n\nNotice that `aes()` is not a helper function (a function in the argument space).\n\nAlso, R dots become `_` in the argument names.\n\nNote that we don't have to use the syntax above, which groups the functions in a single expression with `(...)`.\n\nWe can do this:\n\nOr this:\n\nNote that none of these are like R due to differing white space rules.\n\n## Faceting\n\n## The Pandas Way\n\nNote the GGPlot included the computation of counts in the `geom_bar()` function.\n\nHowever, sometomes Pandas *does* do internal calculations, as with `.hist()`:\n\nFor **faceting in Pandas**, see this: https://stackoverflow.com/questions/29786227/how-do-i-plot-facet-plots-in-pandas\n\nNotice that it is essentially the result of a `.groupby()` followed by `.unstack()`.\n\nSo, Pandas expects you to do the data transformations upfront.\n\nGGPlot2 will handle these in the geometries and facets\n\nGGPlot2 is easier, but Pandas separates comcerns\n\n**As a rule, data operations should never take place in the visualization**.\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"output-file":"M12-04-Plotnine.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.262","bibliography":["../../refs.bib"],"_quarto-vars":{"version":2,"course_num":"DS 5100","course_title":"Programming for Data Science","academic_term":"Fall 2023","cohort_type":"Online","course_code":"DS5100-2023-08-O","course_allocation":"msds_ds5100","canvas_url":"https://canvas.its.virginia.edu/courses/75059","github_url":"https://github.com/ontoligent/DS5100-2023-08-O","website_url":"https://ontoligent.github.io/DS5100-2023-08-O","survey_form_url":"https://forms.office.com/r/YWaFPXPKz8","request_form_url":"https://forms.office.com/r/7G65N5eppk"},"theme":"cosmo","fig-cap-location":"bottom","reader-mode":false},"extensions":{"book":{"multiFile":true}}}}}