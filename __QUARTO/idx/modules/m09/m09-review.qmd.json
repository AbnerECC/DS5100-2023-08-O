{"title":"Review","markdown":{"headingText":"Review","containsRefs":false,"markdown":"\n<ul>\n<li>Method arguments and Class Attributes</li>\n<li>Understanding Modules and Packages</li>\n</ul>\n<ol>\n<li>\n<div><strong>Modules</strong></div>\n</li>\n<ol>\n<li>\n<div>A module is <strong>a single namespace</strong> with many possible values (functions, classes, constants, etc.)</div>\n</li>\n<li>\n<div>Usually corresponds to a <strong>file</strong>.</div>\n</li>\n<li>\n<div>All modules have a <strong>name</strong>.</div>\n</li>\n<li>\n<div><span>Python has only one type of </span><strong><span>module</span></strong><span> object.</span></div>\n</li>\n</ol>\n<li>\n<div>A <strong>Package</strong> is just a module that may contain other modules (or packages).</div>\n</li>\n<ol>\n<li>\n<div>It is module with a <span data-fontfamily=\"monospace\"><strong>__path__</strong></span> attribute.</div>\n</li>\n<li>\n<div><span>Packages</span><span> organize modules into a named hierarchy</span>.</div>\n</li>\n<li>\n<div>Packages : modules :: directories : files</div>\n</li>\n<li>\n<div>Usually corresponds to a directory with with an <span data-fontfamily=\"monospace\">__init__.py</span> file in it.</div>\n</li>\n</ol>\n<li>\n<div>There are <strong>two kinds of packages (as of 3.3)</strong></div>\n</li>\n<ol>\n<li>\n<div><strong>Regular packages</strong> are traditional (2 and up to 3.2), they are a directory with an <span data-fontfamily=\"monospace\">__init__.py</span> file. They are dependent on the file system.</div>\n</li>\n<li>\n<div><strong>Namespace packages</strong> are composed of <strong>portions</strong>. They do not have an __init__.py file. Portions can be anywhere. They are not dependent on the file system. They may be virtual.</div>\n</li>\n</ol>\n<li>\n<div><strong>Import</strong> statements bring modules into modules. Combines two operations:</div>\n</li>\n<ol>\n<li>\n<div><strong>Searches</strong> for named module.</div>\n</li>\n<li>\n<div><strong>Binds</strong> results to local name, i.e. the fully qualified path or an alias.</div>\n</li>\n<li>\n<div>Compiles and runs the files and packages it imports.</div>\n</li>\n</ol>\n<li>\n<div><strong>Some general ideas</strong></div>\n</li>\n<ol>\n<li>\n<div>You can think of a module as a <strong>supplemental file</strong> relative to a top-level program or script.</div>\n</li>\n<li>\n<div><span>Module files generally don&rsquo;t do anything when run directly -- they are used by other files.</span></div>\n</li>\n<li>\n<div><span>When modules are imported, their elements are called </span><strong><span>attributes</span></strong></div>\n</li>\n<li>\n<div>Imports execute <span data-fontfamily=\"monospace\">__init__.py</span> files from the context of the directory of execution. Think of this as the <strong>project</strong> directory.</div>\n</li>\n<li>\n<div>File and directory names should follow variable and function naming conventions since they will be used to create the names used in the importing program.</div>\n</li>\n<li>\n<div><span>Global scope </span>is always the <strong>file</strong> enclosing it, regardless of which module it is ultimately called from.</div>\n</li>\n</ol>\n</ol>"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"output-file":"m09-review.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.262","bibliography":["../../refs.bib"],"_quarto-vars":{"version":2,"course_num":"DS 5100","course_title":"Programming for Data Science","academic_term":"Fall 2023","cohort_type":"Online","course_code":"DS5100-2023-08-O","course_allocation":"msds_ds5100","canvas_url":"https://canvas.its.virginia.edu/courses/75059","github_url":"https://github.com/ontoligent/DS5100-2023-08-O","website_url":"https://ontoligent.github.io/DS5100-2023-08-O","survey_form_url":"https://forms.office.com/r/YWaFPXPKz8","request_form_url":"https://forms.office.com/r/7G65N5eppk"},"theme":"cosmo","fig-cap-location":"bottom","reader-mode":false},"extensions":{"book":{"multiFile":true}}}}}