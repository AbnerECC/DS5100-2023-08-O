{"title":"User Stories","markdown":{"headingText":"User Stories","containsRefs":false,"markdown":"\n**User Stories** are at the heart of Agile development.\n\nInstead of eliciting requirements through a formal process, teams ask clients to provide statements in verbal form:\n\n- `As a [type of user]`\n- `I want [an action or behavior]`\n- `so that [a benefit/value]`\n\nThese are written on **index cards**.\n\nThese are accompanied by **conversation** to clarify the meaning of the sentences.\n\nThese are then converted into **requirements:**\n\n- **Functional** &ndash; relating specifically to how the software will work, i.e. function.\n- **Non-functional** (so-called) &ndash; relating to the broader purpose and context of usage.\n- These map roughly onto the second and third parts of the user story.\n- They also map on MACHINE and HUMAN.\n- This [page](https://cuitandokter.com/) shows some examples of stories mapping onto features (so-called acceptance criteria).\n\nThese requirements are then **prioritized**\n\n- Using **MSCW** &ndash; Must / Should / Can / Won't\n- Within the context of a **scope** definition in a **charter** (not discussed here)\n- See [this link](https://paper-leaf.com/insights/prioritize-user-stories/) for some guidance.\n\nAfter this, requirements are serialized into a rough schedule, grouped into **milestones**.\n\nIn executing the \"plan,\" teams meet regularly in brief, stand-up meetings called **scrums**.\n\n- These happen daily.\n- These involve the development team.\n- Stakeholder representatives, such as the product manager, may attend too.\n\nAt regular intervals, **clients** are introduced to the process\n\n- **Prototypes**, MVPs, etc. are presented.\n- **Feedback** is elicited early and often.\n\nThe process is driven by a **communication** plan:\n\n- Frequency of meeting.\n- Mode of communication &ndash; F2F, Slack, Git.\n- Task management tools &ndash; Jira, Trello, Smartsheet, etc.\n\nOther **artifacts** are involved in this process:\n\n- The project **charter**.\n- The project **plan**.\n- A **Kan Ban** board.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":true,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"output-file":"user-stories.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.262","bibliography":["../refs.bib"],"_quarto-vars":{"version":2,"course_num":"DS 5100","course_title":"Programming for Data Science","academic_term":"Fall 2023","cohort_type":"Online","course_code":"DS5100-2023-08-O","course_allocation":"msds_ds5100","canvas_url":"https://canvas.its.virginia.edu/courses/75059","github_url":"https://github.com/ontoligent/DS5100-2023-08-O","website_url":"https://ontoligent.github.io/DS5100-2023-08-O","survey_form_url":"https://forms.office.com/r/YWaFPXPKz8","request_form_url":"https://forms.office.com/r/7G65N5eppk"},"theme":"cosmo","fig-cap-location":"bottom","reader-mode":false},"extensions":{"book":{"multiFile":true}}}}}